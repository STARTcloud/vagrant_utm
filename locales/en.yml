en:
  vagrant_utm:
    config:
      utm_file_url_required: |-
        Configuration must specify utm.file_url.
        UTM file URL is required to import the UTM virtual machine. 
    errors:
      utm_not_detected: |-
        UTM Application not detected. Please install UTM from https://mac.getutm.app/
      utm_invalid_version: |-
        utm_vagrant has detected that you have a version of UTM installed
        that is not supported by this version of utm_vagrant. Please install one of
        the supported versions listed below to use utm_vagrant plugin:

        %{supported_versions}

        A plugin update may also be available that adds support for the version
        you specified. Please check github page of the plugin to download
        the latest version.
      command_error: |-
        There was an error while executing a command. 
        The command and stderr is shown below.

        Command: %{command}

        Stderr: %{stderr} 
        Stdout: %{stdout} 
      instance_not_created: |-
        The virtual machine has not been created yet.
      instance_not_running: |-
        The virtual machine is not running.
      macos_required: |-
        MacOS is required to run this provider
      qemu_img_required: |-
        qemu-img is required to use snapshot feature.
        You can install qemu-img using `brew install qemu`.
      snapshot_command_failed: |-
        There was an error while executing `qemu-img`, a CLI used by vagrant-utm
        for managing UTM snapshots. qemu-img only supports offline operations, so
        the VM must be stopped before any snapshot operation.
        The error is shown below.

        Error: %{stderr} 
      snapshot_multiple_vm_files: |-
        Multiple VM files detected. vagrant-utm which uses qemu-img does not support 
        snapshot feature when multiple VM files are present.

        Directory checked: %{directory}
        Files found: %{files}
      snapshot_vm_file_not_found: |-
        VM file not detected. vagrant-utm checks for single qcow2 file named in 
        UUID format in VM's data directory.

        Directory checked: %{directory}
      utm_import_failed: |-
        UTM virtual machine import failed.
      utmctl_error: |-
        There was an error while executing `utmctl`, a CLI used by vagrant-utm
        for controlling UTM. The command and stderr is shown below.

        Command: %{command}

        Stderr: %{stderr} 
      utm_launch_error: |-
        There was an error running UTM or OSA. This is usually a permissions
        problem or installation problem with UTM itself, and not Vagrant.
        Please note the error message below (if any), resolve the issue, and
        try Vagrant again.

        %{message}

    messages:
      importing_utm_file: |-
        Importing UTM virtual machine file %{name}...
      download_confirmation: |-
        IMPORTANT: Due to limited UTM API support, this plugin does not know when the download is finished.
        1. Headover to UTM and confirm to download UTM file.
        2. Make sure the file is loaded and exists as last VM in UTM list (UI).
        3. If the downloaded VM file name is same as existing VM, UTM will cause unexpected behavior.
        Change VM, make sure the VM is last in the list and then continue.
        "Are you sure the file '%{name}' is loaded in UTM and exists as last VM? [y/N] 
      setting_id: |-
        Setting the Vagrant machine ID to UTM VM UUID: %{id}
      waiting_for_vm: |-
        UTM does not report when the VM is ready, it only reports when the VM is started.
        So, waiting %{time} secs for the UTM virtual machine to be ready...
        Default wait time is 20 seconds, you can change it by setting `config.vm.provider.utm.wait_time` in Vagrantfile.
    
    commands:
      common:
        vm_already_running: |-
          The UTM VM is already running.
      # VM Commands 
      up:
        will_not_create: |-
          The UTM virtual machine will not be created.
      # UTM VM Status
      status:
        stopped: |-
          The VM is stopped. To restart the VM, simply run `vagrant up`
        starting: |-
          The VM is starting.
        started: |-
          The VM is started. To stop this VM, you can run `vagrant halt` to
          shut it down forcefully, or you can run `vagrant suspend` to simply
          suspend the virtual machine. In either case, to restart it again,
          simply run `vagrant up`.
        pausing: |-
          The VM is pausing.
        paused: |-
          The VM is paused. To resume this VM, simply run `vagrant resume`.
        resuming: |-
          The VM is resuming.   
        stopping: |-
          The VM is stopping.
        not_created: |-
          The environment has not yet been created. Run `vagrant up` to
          create the environment. If a machine is not created, only the
          default provider will be shown. So if a provider is not listed,
          then the machine is not created for that environment.
      common:
        vm_not_stopped: |-
          The VM is not in a stopped state, but the command requires the VM to be 
          stopped. To stop this VM, you can run `vagrant halt` to shut it down forcefully.
    utm:
      checking_guest_additions: |-
        Checking for guest additions in VM...

    actions:
      vm:
        check_guest_additions:
          detected: |-
            Guest additions detected
          not_detected: |-
            No guest additions were detected for this VM! Guest
            additions are required for forwarded ports, shared folders, host only
            networking, and more. If SSH fails on this machine, please install
            the guest additions and retry
        export:
          manual_exporting: |-
            UTM 'Share' feature in UI will Export the virtual machine and all its data.
            Till 'Share' is exposed via API, this plugin shows manual steps to export VM.
            1. Headover to UTM.
            2. Open the action menu of VM by a secondary click on a virtual machine %{name} in the list.
            3. Select 'Share' and save the file to a location.
        boot:
          disposable: |-
            WARNING: The UTM virtual machine is booting in disposable mode. 
            Changes made to the VM will be lost when the VM is powered off.
            Learn more at https://docs.getutm.app/advanced/disposable/
        snapshot:
          list: |-
            Listing snapshots for UTM virtual machine...
            
